foo <- function(arg) {
res <- arg + 1
return(res)
}
ls()
foo
mean
var
cor
foo()
foo(1)
foo
foo(6)
foo("g")
foo <- function(x, power=2) {
return(x ^ power)
}
foo(3)
foo(3, power=3)
foo(3, pow=3)
foo(3, p=3)
foo(3, b=3)
cat("Hello World")
foo <- function() cat("hello world")
foo()
hw <- function(){
cat("Ola mundo")
}
hw
hw()
hw <- function(a){
cat("Ola mundo")
}
hw
hw()
hw <- function(a){
a +1
cat("Ola mundo")
}
hw()
ls()
a <- 1
hw()
ls()
df <- data.frame(x=rlnorm(20), y=rlnorm(20))
apply(df, 2, sum)
foo <- function(x) {
return(x/mean(x))
}
apply(df, 2, foo)
foo <- function(x) {
return(sum(x/mean(x))
}
apply(df, 2, foo)
foo <- function(x) {
return(sum(x/mean(x))
}
foo <- function(x) {
return(sum(x/mean(x)))
}
apply(df, 2, foo)
apply(df, 2, sum)
foo <- function(x) {
return(sum(x/mean(x)))
}
apply(df, 2, foo)
foo <- function(x) {
return(x/mean(x))
}
apply(df, 2, foo)
df1 <- apply(df, 2, foo)
bwplot(df)
boxplot(df)
boxplot(df1)
boxplot(df)
boxplot(df1)
return(x/mean(x))
df
x <- df
return(x/mean(x))
x/mean(x)
y <- x/mean(x)
boxplot(y)
boxplot(x/mean(x))
foo <- function(x) {
boxplot(x/mean(x))
}
foo(df)
foo(df)
cv <- function(x) {
a <- abs(sd(x)/mean(x))
cat(a)
}
cv(rnorm(100))
foo <- function(x, plot=TRUE){
y <- apply(x, 2, cv)
cat(y)
if(isTRUE(plot)) plot(y)
}
df
foo(df)
df
df1
foo <- function(x, plt=TRUE){
y <- apply(x, 2, cv)
cat(y)
if(isTRUE(plt)) plot(y)
}
foo(df)
foo <- function(x, plt=TRUE){
y <- apply(x, 2, cv)
if(isTRUE(plt)) plot(y)
cat(y)
}
foo(df)
debug(f00)
debug(foo)
foo(df)
y
Q
foo <- function(x, plt=TRUE){
y <- apply(x, 2, cv)
if(isTRUE(plt)) plot(y)
cat(y)
}
foo(df)
debug(foo)
foo(df)
y
cv
cv <- function(x) {
a <- abs(sd(x)/mean(x))
cat(a)
a
}
Q
cv <- function(x) {
a <- abs(sd(x)/mean(x))
cat(a)
a
}
foo <- function(x, plt=TRUE){
y <- apply(x, 2, cv)
if(isTRUE(plt)) plot(y)
cat(y)
}
foo <- function(x, plt=TRUE){
y <- apply(x, 2, cv)
if(isTRUE(plt)) plot(y)
}
foo(df)
foo <- function(x, plot=TRUE){
y <- apply(x, 2, cv)
if(plot) plot(y)
}
foo(df)
foo(df)
ls()
rm(list=ls())
ls()
ls()
source("fun.R")
ls()
cv
v1 < rnorm(1200)
v1 <- rnorm(1200)
v2 <- rnorm(1200)
df <- data.frame(a=v1, b=v2)
apply(df, 2, cv)
source("fun.R")
apply(df, 2, cv)
library(ggplot2)
ple4 <- read.csv("../Day01/ple4.csv")
apply(ple4, 2, cv)
pairs(ple4)
ls()
rm(list=ls())
foo <- function(x) {
a <- 9
return(x + a)
}
foo(2)
ls()
a <- 3
foo(2)
ls()
a
foo(2)
foo()
foo <- function(x) {
#a <- 9
return(x + a)
}
foo(2)
a
rm(a)
foo(2)
a <- 3
foo(2)
foo
rm(a)
foo(2)
ls()
a <- 3
ls()
foo(2)
plot
plot.default
foo <- function(x) {
if(x > 2) {
print("x is larger than 2")
} else {
print("it is not!")
}
}
foo(9)
foo(1)
x <- 9
x>2
x <- 1
x>2
foo <- function(x) {
if(x > 2) {
print("x is larger than 2")
}
else {
print("it is not!")
}
}
foo(1)
foo <- function(a){
a+1
}
foo(1)
foo("a")
foo <- function(a){
if(is.numeric(a)){
a+1
} else {
#print("need a numeric")
#c("need a numeric")
stop("need a numeric")
}
}
foo(1)
foo("a")
a <- "a"
foo <- function(a){
if(is.numeric(a)){
b <- a+1
} else {
#print("need a numeric")
#c("need a numeric")
stop("need a numeric")
}
b^2
}
foo(1)
foo("a")
foo <- function(a){
if(is.numeric(a)){
b <- a+1
} else {
#print("need a numeric")
c("need a numeric")
#stop("need a numeric")
}
b^2
}
foo("a")
foo <- function(a){
if(is.numeric(a)){
b <- a+1
} else {
print("need a numeric")
#c("need a numeric")
#stop("need a numeric")
}
b^2
}
foo("a")
my.cv
myCv
ls()
a
a <- 1
a
mean <- 1
mean
rm(mean)
mean\
mean
apply
for(i in seq(1, 10))
print(i)
seq(1,10)
for(i in seq(1, 10, len=3))
print(i)
seq(1, 10, len=3)
list(a=1, b=2,c=3)
lst <- list(a=1, b=2,c=3)
lst
lst <- list(a=1, b=2,c="c")
lst
for(i in lst) print(i)
lst
for(i in 1:3) print(lst[[i]])
for(i in lst) print(i)
array(rnorm(100), dim(2,5,10))
array(rnorm(100), dim=c(2,5,10))
arr1 <- array(rnorm(100), dim=c(2,5,10))
arr2 <- array(rnorm(100), dim=c(2,5,10))
arr3 <- array(rnorm(100), dim=c(2,5,10))
lst <- list(a=arr1, b=arr2,c=arr3)
for(i in lst) mean(i)
for(i in lst) mean(i[[]])
for(i in lst) mean(i[])
lst
mean(lst[[1]])
for(i in 1:3) mean(lst[[i]])
for(i in 1:3) mean(lst[i])
for(i in lst) mean(i[[1]])
mean
foo <- function(){
n <- rep(NA, 10)
n[1] <- 1
for (i in 2:10) {
n[i] <- 2 * n[i-1]
}
plot(1:10, n, type='b', pch=19)
}
foo()
ls()
is(lst)
lapply(lst, mean)
for(i in lst) mean(i)
for(i in lst) return(mean(i))
for(i in lst) print(mean(i))
foo <- function(ngen){
n <- rep(NA, ngen)
n[1] <- 1
for (i in 2:ngen) {
n[i] <- 2 * n[i-1]
}
plot(1:10, n, type='b', pch=19)
}
foo(20)
foo <- function(ngen){
n <- rep(NA, ngen)
n[1] <- 1
for (i in 2:ngen) {
n[i] <- 2 * n[i-1]
}
plot(1:ngen, n, type='b', pch=19)
}
foo(20)
foo <- function(ngen, gr){
n <- rep(NA, ngen)
n[1] <- 1
for (i in 2:ngen) {
if(gr=="linear") n[i] <- 2 * n[i-1]
if(gr=="exponential") n[i] <- exp(n[i-1])
}
plot(1:ngen, n, type='b', pch=19)
}
foo(10)
foo(10, "lin")
foo(10, "linear")
foo(10, "exponential")
debug(foo)
foo(10, "exponential")
foo(10, "exponential")
i
n
show(n)
Q
foo <- function(ngen, gr){
n <- rep(NA, ngen)
n[1] <- 1
#  for (i in 2:ngen) {
#    if(gr=="linear") n[i] <- 2 * n[i-1]
#    if(gr=="exponential") n[i] <- exp(n[i-1])
}
#  if(gr=="linear"){
#    for (i in 2:ngen) n[i] <- 2 * n[i-1]
#  }
if(gr=="exponential"){
for (i in 2:ngen) n[i] <- exp(n[i-1])
}
plot(1:ngen, n, type='b', pch=19)
}
foo <- function(ngen, gr){
n <- rep(NA, ngen)
n[1] <- 1
#  for (i in 2:ngen) {
#    if(gr=="linear") n[i] <- 2 * n[i-1]
#    if(gr=="exponential") n[i] <- exp(n[i-1])
}
if(gr=="linear"){
for (i in 2:ngen) n[i] <- 2 * n[i-1]
}
if(gr=="exponential"){
for (i in 2:ngen) n[i] <- exp(n[i-1])
}
plot(1:ngen, n, type='b', pch=19)
}
foo <- function(ngen, gr){
n <- rep(NA, ngen)
n[1] <- 1
#  for (i in 2:ngen) {
#    if(gr=="linear") n[i] <- 2 * n[i-1]
#    if(gr=="exponential") n[i] <- exp(n[i-1])
#  }
if(gr=="linear"){
for (i in 2:ngen) n[i] <- 2 * n[i-1]
}
if(gr=="exponential"){
for (i in 2:ngen) n[i] <- exp(n[i-1])
}
plot(1:ngen, n, type='b', pch=19)
}
foo(5, "linear")
foo(5, "exponential")
foo(5, "linear")
foo(5, "exponential")
foo <- function(ngen, gmod, gr=NULL){
n <- rep(NA, ngen)
n[1] <- 1
if(gmod=="linear"){
for (i in 2:ngen) n[i] <- gr * n[i-1]
}
if(gmod=="exponential"){
for (i in 2:ngen) n[i] <- exp(n[i-1])
}
plot(1:ngen, n, type='b', pch=19)
}
foo(5, "exponential")
foo(5, "exponential")
foo(5, "linear")
foo(5, "linear", 2)
lst
lst[[1]]
is(lst[[1]])
DIM(lst[[1]])
dim(lst[[1]])
for(i in lst) mean(i)
for(i in lst) print(mean(i))
for(i in lst) length(i)
for(i in lst) print(length(i))
list(a=arr1, b=arr2, c="a")
lst <- list(a=arr1, b=arr2, c="a")
for(i in lst) print(length(i))
lapply(lst, length)
lapply(lst, mean)
lapply(lst, mean)
